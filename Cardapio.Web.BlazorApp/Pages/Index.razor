@page "/"

<PageTitle>Menu</PageTitle>

@using Cardapio.Application.DTOs
@using Cardapio.Web.BlazorApp.Data
@using System.Globalization
@using Cardapio.Web.BlazorApp.Helper
@using Cardapio.Web.BlazorApp.Services
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject LocalStorageAccessor protectedLocalStorage
@inject OrderMenuService orderMenuService
@inject NavigationManager navigation

@if(TableNumber == 0)
{
    <h3>carregando...</h3>
}
else if (OrderMenu != null)
{    
    <Menu Id="OrderMenu.Id.Value" TableNumber="TableNumber"/>
}
else
{
    <center class="m-2"><h3>Selecione uma mesa</h3></center>
    <div class="container row m-4">

        @foreach (var item in TableList)
        {
            <div class="list">
                <div class="card text-center" style="width:18rem">
                    <div class="card-header bg-secondary text-white">
                         <h5>@("Mesa "+item)</h5>
                    </div>
                    <div class="card-body">
                        <div class="card-title">
                            Clique para iniciar seu atendimento
                        </div>

                    </div>
                    <div class="card-footer">
                        <input type="button" class="btn-sm btn-outline-primary" style="margin-top:auto;" value="Soliciar atendimento" @onclick="()=>PostOrderAsync(item)" />

                    </div>
                </div>

            </div>
        }
    </div>
    
}

@code {
    public ReadOrderDTO OrderMenu{ get; set; }
    public int TableNumber{ get; set; }
    public List<int> TableList =
        new List<int> { 1, 2, 3, 4, 5, 6 };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var number = await protectedLocalStorage.GetValueAsync<string>("mesa");
            TableNumber = int.TryParse(number, out int value) ? value : 0;
            OrderMenu = await orderMenuService.GetOrderAsync(TableNumber);
            StateHasChanged();            
        }
        await base.OnAfterRenderAsync(firstRender);
    }
    protected override async Task OnInitializedAsync()
    {
        // var number = await protectedLocalStorage.GetValueAsync<int>("mesa");
        // OrderMenu = await orderMenuService.GetOrderAsync(TableNumber);
    }

    public async Task PostOrderAsync(int id)
    {
        var order = new AddOrderDTO { Number = id };
        var result = await orderMenuService.AddOrderAsync(order);
        if (result != null)
        {
            OrderMenu = await orderMenuService.GetOrderAsync(result.Number);
            await protectedLocalStorage.SetValueAsync("mesa", OrderMenu.Number);
            navigation.NavigateTo("/menu/"+OrderMenu.Id+"/"+OrderMenu.Number);
        }
        
    }
}
